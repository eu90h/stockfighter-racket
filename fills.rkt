#lang racket/base
(provide (except-out (all-defined-out) date-format-string))
(require srfi/19)
(define date-format-string "~Y-~m-~dT~H:~M:~S.~NZ")
(define (fill-qty f)
  (hash-ref f `qty 0))
(define (fill-price f)
  (hash-ref f `price 0))
(define (sf-date f)
  (string->date (hash-ref f `ts) date-format-string))
(define (sf-time f)
  (date->time-utc (sf-date f)))
(define (sf-time<=? f0 f1)
  (let ([t0 (date->time-utc (string->date (hash-ref f0 `ts) date-format-string))]
        [t1 (date->time-utc (string->date (hash-ref f1 `ts) date-format-string))])
    (time<=? t0 t1)))
(define (sf-time<? f0 f1)
  (let ([t0 (date->time-utc (string->date (hash-ref f0 `ts) date-format-string))]
        [t1 (date->time-utc (string->date (hash-ref f1 `ts) date-format-string))])
    (time<? t0 t1)))
(define (sf-time>=? f0 f1)
  (let ([t0 (date->time-utc (string->date (hash-ref f0 `ts) date-format-string))]
        [t1 (date->time-utc (string->date (hash-ref f1 `ts) date-format-string))])
    (time>=? t0 t1)))
(define (sf-time>? f0 f1)
  (let ([t0 (date->time-utc (string->date (hash-ref f0 `ts) date-format-string))]
        [t1 (date->time-utc (string->date (hash-ref f1 `ts) date-format-string))])
    (time>? t0 t1)))
(define (sf-time=? f0 f1)
  (let ([t0 (date->time-utc (string->date (hash-ref f0 `ts) date-format-string))]
        [t1 (date->time-utc (string->date (hash-ref f1 `ts) date-format-string))])
    (time=? t0 t1)))
(define (newest-fill fills)
  (unless (list? fills)
    (raise-argument-error `fill-newest "list?" fills))
  (when (null? fills)
    (raise-argument-error `fill-newest "not-null?" fills))
  (let find-newest ([fills fills] [best (car fills)])
    (if (null? fills)
        best
        (find-newest (cdr fills)
                     (if (sf-time>=? (car fills)
                                     best)
                         (car fills)
                         best)))))
(module+ test
  (require rackunit)
  (define fill0 #hasheq((price . 3038)
                        (ts . "2015-11-29T02:53:45.95810547Z")
                        (qty . 100)))
  (define fill1 #hasheq((price . 3030)
                        (ts . "2015-11-29T02:53:46.00000001Z")
                        (qty . 80)))
  (check-true (sf-time<=? fill0 fill1))
  (check-false (sf-time<=? fill1 fill0))
  (check-true (sf-time>? fill1 fill0))
  (check-true (sf-time<? fill0 fill1))
  (check-true (sf-time>=? fill1 fill0))
  (check-equal? (fill-price fill0) 3038)
  (check-equal? (fill-price fill1) 3030)
  (check-equal? (sf-date fill0)
                (date* 45 53 2 29 11 2015 0 332 #f -18000 958105470 ""))
  (check-equal? (sf-time fill1)
                (make-time time-utc 10 1448783626))
  (check-equal? (fill-qty fill0) 100)
  (check-equal? (newest-fill (list fill0 fill1)) fill1))
  